// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/chat.proto

package proto_chat_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type LoginResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{1}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type StreamRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{2}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StreamRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StreamResponse struct {
	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*StreamResponse_ClientOnline
	//	*StreamResponse_ClientOffline
	//	*StreamResponse_ClientMessage
	//	*StreamResponse_ServerShutdown
	Event                isStreamResponse_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{3}
}

func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

func (m *StreamResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type isStreamResponse_Event interface {
	isStreamResponse_Event()
}

type StreamResponse_ClientOnline struct {
	ClientOnline *StreamResponse_Online `protobuf:"bytes,2,opt,name=client_online,json=clientOnline,proto3,oneof"`
}

type StreamResponse_ClientOffline struct {
	ClientOffline *StreamResponse_Offline `protobuf:"bytes,3,opt,name=client_offline,json=clientOffline,proto3,oneof"`
}

type StreamResponse_ClientMessage struct {
	ClientMessage *StreamResponse_Message `protobuf:"bytes,4,opt,name=client_message,json=clientMessage,proto3,oneof"`
}

type StreamResponse_ServerShutdown struct {
	ServerShutdown *StreamResponse_Shutdown `protobuf:"bytes,5,opt,name=server_shutdown,json=serverShutdown,proto3,oneof"`
}

func (*StreamResponse_ClientOnline) isStreamResponse_Event() {}

func (*StreamResponse_ClientOffline) isStreamResponse_Event() {}

func (*StreamResponse_ClientMessage) isStreamResponse_Event() {}

func (*StreamResponse_ServerShutdown) isStreamResponse_Event() {}

func (m *StreamResponse) GetEvent() isStreamResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *StreamResponse) GetClientOnline() *StreamResponse_Online {
	if x, ok := m.GetEvent().(*StreamResponse_ClientOnline); ok {
		return x.ClientOnline
	}
	return nil
}

func (m *StreamResponse) GetClientOffline() *StreamResponse_Offline {
	if x, ok := m.GetEvent().(*StreamResponse_ClientOffline); ok {
		return x.ClientOffline
	}
	return nil
}

func (m *StreamResponse) GetClientMessage() *StreamResponse_Message {
	if x, ok := m.GetEvent().(*StreamResponse_ClientMessage); ok {
		return x.ClientMessage
	}
	return nil
}

func (m *StreamResponse) GetServerShutdown() *StreamResponse_Shutdown {
	if x, ok := m.GetEvent().(*StreamResponse_ServerShutdown); ok {
		return x.ServerShutdown
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StreamResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StreamResponse_OneofMarshaler, _StreamResponse_OneofUnmarshaler, _StreamResponse_OneofSizer, []interface{}{
		(*StreamResponse_ClientOnline)(nil),
		(*StreamResponse_ClientOffline)(nil),
		(*StreamResponse_ClientMessage)(nil),
		(*StreamResponse_ServerShutdown)(nil),
	}
}

func _StreamResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StreamResponse)
	// event
	switch x := m.Event.(type) {
	case *StreamResponse_ClientOnline:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClientOnline); err != nil {
			return err
		}
	case *StreamResponse_ClientOffline:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClientOffline); err != nil {
			return err
		}
	case *StreamResponse_ClientMessage:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClientMessage); err != nil {
			return err
		}
	case *StreamResponse_ServerShutdown:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ServerShutdown); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StreamResponse.Event has unexpected type %T", x)
	}
	return nil
}

func _StreamResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StreamResponse)
	switch tag {
	case 2: // event.client_online
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamResponse_Online)
		err := b.DecodeMessage(msg)
		m.Event = &StreamResponse_ClientOnline{msg}
		return true, err
	case 3: // event.client_offline
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamResponse_Offline)
		err := b.DecodeMessage(msg)
		m.Event = &StreamResponse_ClientOffline{msg}
		return true, err
	case 4: // event.client_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamResponse_Message)
		err := b.DecodeMessage(msg)
		m.Event = &StreamResponse_ClientMessage{msg}
		return true, err
	case 5: // event.server_shutdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamResponse_Shutdown)
		err := b.DecodeMessage(msg)
		m.Event = &StreamResponse_ServerShutdown{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StreamResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StreamResponse)
	// event
	switch x := m.Event.(type) {
	case *StreamResponse_ClientOnline:
		s := proto.Size(x.ClientOnline)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamResponse_ClientOffline:
		s := proto.Size(x.ClientOffline)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamResponse_ClientMessage:
		s := proto.Size(x.ClientMessage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamResponse_ServerShutdown:
		s := proto.Size(x.ServerShutdown)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type StreamResponse_Online struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse_Online) Reset()         { *m = StreamResponse_Online{} }
func (m *StreamResponse_Online) String() string { return proto.CompactTextString(m) }
func (*StreamResponse_Online) ProtoMessage()    {}
func (*StreamResponse_Online) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{3, 0}
}

func (m *StreamResponse_Online) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse_Online.Unmarshal(m, b)
}
func (m *StreamResponse_Online) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse_Online.Marshal(b, m, deterministic)
}
func (m *StreamResponse_Online) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse_Online.Merge(m, src)
}
func (m *StreamResponse_Online) XXX_Size() int {
	return xxx_messageInfo_StreamResponse_Online.Size(m)
}
func (m *StreamResponse_Online) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse_Online.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse_Online proto.InternalMessageInfo

func (m *StreamResponse_Online) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type StreamResponse_Offline struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse_Offline) Reset()         { *m = StreamResponse_Offline{} }
func (m *StreamResponse_Offline) String() string { return proto.CompactTextString(m) }
func (*StreamResponse_Offline) ProtoMessage()    {}
func (*StreamResponse_Offline) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{3, 1}
}

func (m *StreamResponse_Offline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse_Offline.Unmarshal(m, b)
}
func (m *StreamResponse_Offline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse_Offline.Marshal(b, m, deterministic)
}
func (m *StreamResponse_Offline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse_Offline.Merge(m, src)
}
func (m *StreamResponse_Offline) XXX_Size() int {
	return xxx_messageInfo_StreamResponse_Offline.Size(m)
}
func (m *StreamResponse_Offline) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse_Offline.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse_Offline proto.InternalMessageInfo

func (m *StreamResponse_Offline) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type StreamResponse_Message struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse_Message) Reset()         { *m = StreamResponse_Message{} }
func (m *StreamResponse_Message) String() string { return proto.CompactTextString(m) }
func (*StreamResponse_Message) ProtoMessage()    {}
func (*StreamResponse_Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{3, 2}
}

func (m *StreamResponse_Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse_Message.Unmarshal(m, b)
}
func (m *StreamResponse_Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse_Message.Marshal(b, m, deterministic)
}
func (m *StreamResponse_Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse_Message.Merge(m, src)
}
func (m *StreamResponse_Message) XXX_Size() int {
	return xxx_messageInfo_StreamResponse_Message.Size(m)
}
func (m *StreamResponse_Message) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse_Message.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse_Message proto.InternalMessageInfo

func (m *StreamResponse_Message) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *StreamResponse_Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StreamResponse_Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StreamResponse_Shutdown struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse_Shutdown) Reset()         { *m = StreamResponse_Shutdown{} }
func (m *StreamResponse_Shutdown) String() string { return proto.CompactTextString(m) }
func (*StreamResponse_Shutdown) ProtoMessage()    {}
func (*StreamResponse_Shutdown) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{3, 3}
}

func (m *StreamResponse_Shutdown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse_Shutdown.Unmarshal(m, b)
}
func (m *StreamResponse_Shutdown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse_Shutdown.Marshal(b, m, deterministic)
}
func (m *StreamResponse_Shutdown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse_Shutdown.Merge(m, src)
}
func (m *StreamResponse_Shutdown) XXX_Size() int {
	return xxx_messageInfo_StreamResponse_Shutdown.Size(m)
}
func (m *StreamResponse_Shutdown) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse_Shutdown.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse_Shutdown proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LoginRequest)(nil), "proto.chat.v1.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "proto.chat.v1.LoginResponse")
	proto.RegisterType((*StreamRequest)(nil), "proto.chat.v1.StreamRequest")
	proto.RegisterType((*StreamResponse)(nil), "proto.chat.v1.StreamResponse")
	proto.RegisterType((*StreamResponse_Online)(nil), "proto.chat.v1.StreamResponse.Online")
	proto.RegisterType((*StreamResponse_Offline)(nil), "proto.chat.v1.StreamResponse.Offline")
	proto.RegisterType((*StreamResponse_Message)(nil), "proto.chat.v1.StreamResponse.Message")
	proto.RegisterType((*StreamResponse_Shutdown)(nil), "proto.chat.v1.StreamResponse.Shutdown")
}

func init() { proto.RegisterFile("proto/chat.proto", fileDescriptor_ed7e7dde45555b7d) }

var fileDescriptor_ed7e7dde45555b7d = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4b, 0xaf, 0xd2, 0x40,
	0x14, 0x80, 0xdb, 0x5e, 0x7a, 0x7b, 0xef, 0xb9, 0xb4, 0x9a, 0x89, 0x8b, 0xa6, 0x62, 0x34, 0x0d,
	0x18, 0xe2, 0x62, 0x50, 0xdc, 0xe8, 0x56, 0x5d, 0x90, 0xf8, 0x20, 0x16, 0xf7, 0xa4, 0xc0, 0xa1,
	0x34, 0xd2, 0x19, 0xec, 0x4c, 0xf1, 0xef, 0xf8, 0x47, 0xfc, 0x6f, 0x26, 0xf3, 0xe0, 0x61, 0xb0,
	0xde, 0x15, 0x9c, 0xd3, 0x6f, 0xbe, 0xf3, 0xc8, 0x81, 0x87, 0xbb, 0x9a, 0x4b, 0x3e, 0x5a, 0x6e,
	0x72, 0x49, 0xd5, 0x5f, 0x12, 0xaa, 0x1f, 0xaa, 0x32, 0xfb, 0x57, 0xc9, 0xd3, 0x82, 0xf3, 0x62,
	0x8b, 0x23, 0x95, 0x5d, 0x34, 0xeb, 0x91, 0x2c, 0x2b, 0x14, 0x32, 0xaf, 0x76, 0x9a, 0x4f, 0x5f,
	0x40, 0xf7, 0x13, 0x2f, 0x4a, 0x96, 0xe1, 0x8f, 0x06, 0x85, 0x24, 0x09, 0xdc, 0x34, 0x02, 0x6b,
	0x96, 0x57, 0x18, 0xbb, 0xcf, 0xdc, 0xe1, 0x6d, 0x76, 0x88, 0xd3, 0x01, 0x84, 0x86, 0x15, 0x3b,
	0xce, 0x04, 0x92, 0x47, 0xe0, 0x4b, 0xfe, 0x1d, 0x99, 0x21, 0x75, 0x90, 0xbe, 0x85, 0x70, 0x26,
	0x6b, 0xcc, 0x2b, 0xeb, 0x8c, 0x21, 0xa8, 0x50, 0x88, 0xbc, 0xb0, 0x4a, 0x1b, 0x92, 0x08, 0xbc,
	0x72, 0x15, 0x7b, 0x2a, 0xe9, 0x95, 0xab, 0xf4, 0x77, 0x07, 0x22, 0xfb, 0xd6, 0xd4, 0x78, 0x03,
	0xb7, 0x87, 0x9e, 0xd5, 0xf3, 0xbb, 0x71, 0x42, 0xf5, 0x54, 0xd4, 0x4e, 0x45, 0xbf, 0x59, 0x22,
	0x3b, 0xc2, 0xe4, 0x23, 0x84, 0xcb, 0x6d, 0x89, 0x4c, 0xce, 0x39, 0xdb, 0x96, 0x0c, 0x55, 0x9d,
	0xbb, 0x71, 0x9f, 0x9e, 0xad, 0x88, 0x9e, 0xd7, 0xa3, 0x53, 0xc5, 0x4e, 0x9c, 0xac, 0xab, 0x1f,
	0xeb, 0x98, 0x7c, 0x81, 0xc8, 0xca, 0xd6, 0x6b, 0x65, 0xbb, 0x52, 0xb6, 0xc1, 0x7f, 0x6c, 0x1a,
	0x9e, 0x38, 0x99, 0xe9, 0xc5, 0x24, 0x4e, 0x7c, 0x76, 0x35, 0x9d, 0xfb, 0xf8, 0x3e, 0x6b, 0xf8,
	0xe8, 0x33, 0x09, 0xf2, 0x15, 0x1e, 0x08, 0xac, 0xf7, 0x58, 0xcf, 0xc5, 0xa6, 0x91, 0x2b, 0xfe,
	0x93, 0xc5, 0xbe, 0x12, 0x3e, 0x6f, 0x17, 0xce, 0x0c, 0x3d, 0x71, 0xb2, 0x48, 0x0b, 0x6c, 0x26,
	0xe9, 0xc3, 0xb5, 0x19, 0xbe, 0xe5, 0x28, 0x92, 0x01, 0x04, 0x76, 0xa6, 0x36, 0x6c, 0x0a, 0x81,
	0x6d, 0xb5, 0x05, 0x3b, 0x3d, 0x15, 0xef, 0xd2, 0xa9, 0x5c, 0xd9, 0x53, 0x49, 0x00, 0x6e, 0x6c,
	0xa7, 0xef, 0x02, 0xf0, 0x71, 0x8f, 0x4c, 0x8e, 0x7f, 0xb9, 0xd0, 0x79, 0xbf, 0xc9, 0x25, 0xf9,
	0x00, 0xbe, 0x3a, 0x55, 0xf2, 0xf8, 0xaf, 0xf1, 0x4f, 0x8f, 0x3d, 0xe9, 0x5d, 0xfe, 0xa8, 0x57,
	0x93, 0x3a, 0x24, 0x83, 0xd0, 0x34, 0xad, 0xb7, 0x46, 0x7a, 0xff, 0x58, 0xa6, 0xd6, 0x3d, 0x69,
	0x5d, 0x75, 0xea, 0x0c, 0xdd, 0x97, 0xee, 0xe2, 0x5a, 0x31, 0xaf, 0xff, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x24, 0xa0, 0x20, 0xca, 0xbb, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	MessageStream(ctx context.Context, opts ...grpc.CallOption) (Chat_MessageStreamClient, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/proto.chat.v1.Chat/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) MessageStream(ctx context.Context, opts ...grpc.CallOption) (Chat_MessageStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/proto.chat.v1.Chat/MessageStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatMessageStreamClient{stream}
	return x, nil
}

type Chat_MessageStreamClient interface {
	Send(*StreamRequest) error
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type chatMessageStreamClient struct {
	grpc.ClientStream
}

func (x *chatMessageStreamClient) Send(m *StreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatMessageStreamClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	MessageStream(Chat_MessageStreamServer) error
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.chat.v1.Chat/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_MessageStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).MessageStream(&chatMessageStreamServer{stream})
}

type Chat_MessageStreamServer interface {
	Send(*StreamResponse) error
	Recv() (*StreamRequest, error)
	grpc.ServerStream
}

type chatMessageStreamServer struct {
	grpc.ServerStream
}

func (x *chatMessageStreamServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatMessageStreamServer) Recv() (*StreamRequest, error) {
	m := new(StreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.chat.v1.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Chat_Login_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MessageStream",
			Handler:       _Chat_MessageStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/chat.proto",
}
